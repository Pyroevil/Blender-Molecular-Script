import requests, argparse, json, os

parser = argparse.ArgumentParser(description='Parameters.')
parser.add_argument('--path', metavar='path', type=str, nargs='+',
                    help='path where to search for files')
parser.add_argument('--files', metavar='files', type=str, nargs='+',
                    help='name of files to upload')       
args = parser.parse_args()
d = vars(args)

r = os.environ['GITHUB_REPOSITORY']
t = os.environ['GITHUB_TOKEN']
p = d['path'][0]
fi = d['files']

owner = r.split("/")[0]
name = r.split("/")[1]

j = {"tag_name":"v1.0.0", # can be manually edited on publishing this draft !
     "target_commitish":"master",
     "name": name,
     "body":"Autogenerated release package",
     "draft":True,
     "prerelease":False,
     "generate_release_notes":False},

js = json.dumps(j[0])

r = requests.post(
    headers={'Accept': 'application/vnd.github.v3+json',
             'Authorization': 'token {token}'.format(token=t)},
    url='https://api.github.com/repos/{owner}/{name}/releases'.format(owner=owner, name=name),
    data=js,
)

if "upload_url" in r.json():
    u = r.json()["upload_url"].split("{")[0]

for f in fi:
    pr = os.path.realpath(p)
    pa = os.path.join(pr, f)
    with open(pa, 'rb') as data:
        r = requests.post(
            headers={'Content-Type': 'application/zip',
                     'Authorization': 'token {token}'.format(token=t)},
            url=u+'?name={name}'.format(name=f),
            data=data.read()
        )

